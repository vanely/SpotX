version: '3.8'

# Production Docker Compose for Opease
# This configuration is hardened for production use with:
# - Pre-built images (no source building)
# - Security hardening (read-only, no-new-privileges, non-root users)
# - No external port exposure for databases
# - Proper resource limits and health checks
# - Immutable infrastructure patterns

services:
  # Main API Service (Prod)
  api:
    image: spotx-api:prod
    container_name: spotx-api-prod
    ports:
      - "${API_EXTERNAL_PORT:-3333}:${API_PORT:-3333}"
    environment:
      - NODE_ENV=production
      - PORT=${API_PORT:-3333}
      - DATABASE_URL=${DATABASE_URL:-postgresql://spotx_user:${POSTGRES_PASSWORD:-secure_password_2024}@postgres:5432/spotx_db}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-secure_redis_password_2024_production}
      - JWT_SECRET=${JWT_SECRET:-your_jwt_secret_key_here_production}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-1d}
      - LOG_LEVEL=${LOG_LEVEL:-error}
      - BULL_BOARD_USERNAME=${BULL_BOARD_USERNAME:-admin}
      - BULL_BOARD_PASSWORD=${BULL_BOARD_PASSWORD:-admin123}
      - BULL_BOARD_SESSION_SECRET=${BULL_BOARD_SESSION_SECRET:-your-session-secret-key-production}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - spotx-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${API_PORT:-3333}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /var/tmp
    user: "1001:1001"

  # PostgreSQL Database (Production)
  postgres:
    image: spotx-postgres:prod
    container_name: spotx-postgres-prod
    environment:
      POSTGRES_DB: spotx_db
      POSTGRES_USER: spotx_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secure_password_2024}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - spotx_postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - spotx-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U spotx_user -d spotx_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
    security_opt:
      - no-new-privileges:true
    read_only: false  # PostgreSQL needs write access to data directory

volumes:
  spotx_redis_data:
    driver: local
  spotx_postgres_data:
    driver: local

networks:
  spotx-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
