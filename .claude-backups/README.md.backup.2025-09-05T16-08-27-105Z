# SpotX - Community-Driven Spots Repository

## Project Directory Structure

```
spotx/
├── backend/
│   ├── src/
│   │   ├── controllers/
│   │   │   ├── auth.controller.ts
│   │   │   ├── spots.controller.ts
│   │   │   ├── users.controller.ts
│   │   │   ├── categories.controller.ts
│   │   │   └── uploads.controller.ts
│   │   ├── middleware/
│   │   │   ├── auth.middleware.ts
│   │   │   ├── validation.middleware.ts
│   │   │   └── error.middleware.ts
│   │   ├── routes/
│   │   │   ├── auth.routes.ts
│   │   │   ├── spots.routes.ts
│   │   │   ├── users.routes.ts
│   │   │   ├── categories.routes.ts
│   │   │   └── uploads.routes.ts
│   │   ├── services/
│   │   │   ├── auth.service.ts
│   │   │   ├── spots.service.ts
│   │   │   ├── users.service.ts
│   │   │   ├── categories.service.ts
│   │   │   ├── uploads.service.ts
│   │   │   └── email.service.ts
│   │   ├── utils/
│   │   │   ├── jwt.util.ts
│   │   │   ├── validation.util.ts
│   │   │   └── constants.ts
│   │   ├── types/
│   │   │   ├── auth.types.ts
│   │   │   ├── spots.types.ts
│   │   │   └── api.types.ts
│   │   ├── config/
│   │   │   ├── database.config.ts
│   │   │   ├── r2.config.ts
│   │   │   └── email.config.ts
│   │   └── app.ts
│   ├── prisma/
│   │   ├── schema.prisma
│   │   ├── migrations/
│   │   └── seed.ts
│   ├── tests/
│   │   ├── auth.test.ts
│   │   ├── spots.test.ts
│   │   └── setup.ts
│   ├── package.json
│   ├── tsconfig.json
│   ├── .env.example
│   ├── .gitignore
│   └── server.ts
├── frontend/ (to be built later)
├── docs/
│   ├── api.md
│   └── deployment.md
└── README.md
```

## Tech Stack

### Backend

- **Runtime**: Node.js + TypeScript

- **Framework**: Express.js

- **Database**: PostgreSQL with PostGIS

- **ORM**: Prisma

- **Authentication**: JWT + Email magic links

- **File Storage**: Cloudflare R2 (S3-compatible)

- **Validation**: Zod

- **Testing**: Jest + Supertest

### Frontend (Coming Next)

- **Framework**: React 18 + TypeScript

- **Build Tool**: Vite

- **Router**: React Router v6

- **UI Library**: shadcn/ui + Tailwind CSS

- **State Management**: TanStack Query v5 + Zustand

- **Maps**: MapLibre GL JS + OpenStreetMap

## Getting Started

1. $1

2. $1

3. $1

4. $1

5. $1

6. $1

7. $1